generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum TaskStatus {
  BACKLOG
  TODO
  IN_PROGRESS
  COMPLETED
}

enum TaskPriority {
  LOW
  MEDIUM
  HIGH
}

enum TaskType {
    TASK
    BUG
    FEATURE
}
model Project {
  id          String  @id @default(uuid())
  title       String
  description String?
  isPinned    Boolean @default(false)

  // Relations
  lists List[] // A project can have many lists (task lists)

  userId      String  // Add this line to store Clerk user ID

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([id])
}

model List {
  id       String @id @default(uuid())
  title    String 
  position Int 

  projectId String 
  project   Project @relation(fields: [projectId], references: [id], onDelete: Cascade)

  // Relations
  tasks Task[] // A list can have many tasks

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([id, projectId])
}


model Task {
  id          String  @id @default(uuid())
  title       String 
  description String? @db.VarChar()

  listId String // Foreign key to List
  list   List   @relation(fields: [listId], references: [id], onDelete: Cascade)

  position    Int @default(0)
  deadline DateTime 

  status TaskStatus @default(TODO)
  priority TaskPriority @default(LOW)
  type TaskType @default(TASK)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([id, listId])
}
